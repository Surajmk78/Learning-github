{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Surajmk78/Learning-github/blob/main/questions\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "**FIBONACCI SERIES**"
      ],
      "metadata": {
        "id": "7zqdhvr82tKu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num = int(input(\"Enter :   \"))\n",
        "n1 = 0\n",
        "n2 = 1\n",
        "lst = [0,1]\n",
        "for i in range(num-2):\n",
        "  n3=n1+n2\n",
        "  n1=n2\n",
        "  n2=n3\n",
        "  lst.append(n3)\n",
        "print(lst)  "
      ],
      "metadata": {
        "id": "Gf6Ewdu_2nPz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "num = int(input(\"Enter a number :  \"))\n",
        "n1,n2 = 0,1\n",
        "print(n1)\n",
        "print(n2)\n",
        "for i in range(num-2):\n",
        "  n3=n1+n2\n",
        "  n1=n2\n",
        "  n2=n3\n",
        "  print(n3)"
      ],
      "metadata": {
        "id": "JFagAJ2bD2uz"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#3 Using while loop\n",
        "\n",
        "num = int(input(\"Enter :   \"))\n",
        "n1,n2 = 0,1\n",
        "print(n1)\n",
        "print(n2)\n",
        "i=1\n",
        "while i<=(num-2):\n",
        "  n3=n1+n2\n",
        "  n1=n2\n",
        "  n2=n3\n",
        "  i+=1\n",
        "  print(n3)"
      ],
      "metadata": {
        "id": "S6GA4odF2q2p"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "yzeuwaZ-4RiR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**PALINDROME**"
      ],
      "metadata": {
        "id": "bMHF-A18Ed79"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "a = (input(\"Enter input :  \"))\n",
        "b = \"\"\n",
        "for i in a:\n",
        "  b=i+b\n",
        "print(\"a : \",a)\n",
        "print(\"b : \",b)\n",
        "if a==b:\n",
        "  print(\"\\nIt\\'s Palindrome\")\n",
        "else:\n",
        "  print(\"\\nIt\\'s not Palindrome\")\n",
        "  "
      ],
      "metadata": {
        "id": "pLw_2RSy9Z6P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "num = int(input(\"Enter a value:\"))  \n",
        "temp = num  \n",
        "rev = 0  \n",
        "if (num > 0):  \n",
        "    dig = num % 10  \n",
        "    rev = rev * 10 + dig  \n",
        "    num = num // 10  \n",
        "if(temp == rev):  \n",
        "    print(\"This value is a palindrome number!\")  \n",
        "else:  \n",
        "    print(\"This value is not a palindrome number!\")  \n"
      ],
      "metadata": {
        "id": "N2TsK83J6WCA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Question : In a 6 km race. Ask a racer at 3km he is tired or not if he is tired then stop race if he isn't continue the race\n"
      ],
      "metadata": {
        "id": "6IGK4LyTXTub"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(6):\n",
        "  print(i,end=\" \")\n",
        "  if i==3:\n",
        "    ask = input(\"\\nAre You Tired :  \")\n",
        "    if ask == \"yes\":\n",
        "      break\n",
        "    elif ask==\"no\":\n",
        "      continue"
      ],
      "metadata": {
        "id": "z1q3y7_tJ2Ro"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "**AVERAGE OF NUMBERS**"
      ],
      "metadata": {
        "id": "_qCZo716XPvG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "num = int(input(\"How many nuber\\'s average you need ? :   \"))\n",
        "sum = 0\n",
        "for i in range(num):\n",
        "  num2 = int(input(\"Enter numbers:  \"))\n",
        "  sum+=num2\n",
        "print(\"Average is : \",sum//num)"
      ],
      "metadata": {
        "id": "mfiMrC37NY-w"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "GiyJ2NAOO6Qn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Write a Python program which iterates the integers from 1 to 50. For multiples of three print \"Three\" instead of the number and for the multiples of five print \"Five\". For numbers which are multiples of both three and five print \"Three-Five\".\n"
      ],
      "metadata": {
        "id": "0HrR9QidaR9M"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(1,20):\n",
        "  if i%3==0 and i%5==0:\n",
        "    print(\"Three-Five\")\n",
        "  elif i%3==0:\n",
        "    print(\"Three\")\n",
        "  elif i%5==0:\n",
        "    print(\"Five\")\n",
        "  else:\n",
        "    print(i)"
      ],
      "metadata": {
        "id": "aGemCyNuW-xv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "0-yPnwNSZNm6"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Write a Python program to convert month name to a number of days."
      ],
      "metadata": {
        "id": "mMRuaVrgbYH_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"List of months: January, February, March, April, May, June, July, August, September, October, November, December\")\n",
        "month_name = input(\"Input the name of Month: \")\n",
        "\n",
        "if month_name == \"February\":\n",
        "\tprint(\"No. of days: 28/29 days\")\n",
        "elif month_name in (\"April\", \"June\", \"September\", \"November\"):\n",
        "\tprint(\"No. of days: 30 days\")\n",
        "elif month_name in (\"January\", \"March\", \"May\", \"July\", \"August\", \"October\", \"December\"):\n",
        "\tprint(\"No. of days: 31 day\")\n",
        "else:\n",
        "\tprint(\"Wrong month name\") \n"
      ],
      "metadata": {
        "id": "M7u_3C_ibERi",
        "outputId": "97e22009-6e32-43d4-ea93-dde50249d17d",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "List of months: January, February, March, April, May, June, July, August, September, October, November, December\n",
            "Input the name of Month: March\n",
            "No. of days: 31 day\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "name": "Welcome To Colaboratory",
      "toc_visible": true,
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}